"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/features/speech_recognition.tsx":
/*!*********************************************!*\
  !*** ./src/features/speech_recognition.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass SpeechRecognition {\n    constructor(textarea, setIsConnected){\n        this.isStarted = false;\n        this.isConnected = false;\n        this.beforSendTime = ()=>{\n            clearTimeout(this.sendTimeOut);\n            this.sendTimeOut = setTimeout(()=>{\n                //console.log(\"Send to server.\")\n                if (this.textarea.value != \"\") {\n                    console.log(this.textarea.value);\n                    this.textarea.value = \"\";\n                    this.speechRecognition.stop();\n                }\n                this.beforSendTime();\n            }, 3000);\n        };\n        this.onResult = (e)=>{\n            const results = e.results;\n            let transcript = \"\";\n            Array.from(results).forEach((result)=>{\n                const alternative = result[0];\n                transcript += alternative.transcript;\n            });\n            //console.log(transcript)\n            this.textarea.value = transcript;\n            this.beforSendTime();\n        };\n        this.onEnd = ()=>{\n            //this.textarea.value = \"\"\n            if (this.isStarted) this.speechRecognition.start();\n        };\n        this.start = ()=>{\n            if (!this.isStarted) this.speechRecognition.start();\n            this.isStarted = true;\n            this.beforSendTime();\n            this.textarea.value = \"\";\n        };\n        this.stop = ()=>{\n            if (this.isStarted) this.speechRecognition.stop();\n            this.isStarted = false;\n            clearTimeout(this.sendTimeOut);\n            this.textarea.value = \"\";\n        };\n        this.getAudioDevice = async ()=>{\n            const devices = await navigator.mediaDevices.enumerateDevices();\n            return devices.filter((mdi)=>mdi.kind == \"audioinput\");\n        };\n        this.switchAudioInputDevice = async (deviceId)=>{\n            const newMediaStream = await navigator.mediaDevices.getUserMedia({\n                audio: {\n                    deviceId: {\n                        exact: deviceId\n                    }\n                },\n                video: false\n            });\n            this.mediaStream = newMediaStream;\n        };\n        this.mediaChange = (deviceId)=>{\n            console.log(deviceId);\n            this.switchAudioInputDevice(deviceId);\n        };\n        this.connectWebSocket = ()=>{\n            if (this.socket == undefined) {\n                this.socket = new WebSocket(\"ws://localhost:6336\");\n                this.socket.onopen = ()=>{\n                    console.log(\"WebSocket connected.\");\n                    this.isConnected = true;\n                    this.setIsConnected(true);\n                };\n                this.socket.onmessage = (e)=>{\n                    console.log(e.data);\n                };\n                this.socket.onclose = ()=>{\n                    console.log(\"WebSocket closed.\");\n                    this.isConnected = false;\n                    this.setIsConnected(false);\n                };\n                this.socket.onerror = (e)=>{\n                    console.error(e);\n                };\n            } else {\n                this.socket.close();\n                this.socket = undefined;\n            }\n        };\n        this.textarea = textarea;\n        this.setIsConnected = setIsConnected;\n        this.speechRecognition = new (window['SpeechRecognition'] || window['webkitSpeechRecognition'])();\n        this.mediaStream = null;\n        if (this.speechRecognition) {\n            console.log(\"SpeechRecognition started.\");\n            this.speechRecognition.lang = \"th-TH\";\n            this.speechRecognition.continuous = true;\n            this.speechRecognition.interimResults = true;\n            this.speechRecognition.onresult = this.onResult;\n            this.speechRecognition.onend = this.onEnd;\n        } else {\n            console.log(\"This Browser does not support SpeechRecognition.\");\n        }\n        navigator.mediaDevices.getUserMedia({\n            audio: true,\n            video: false\n        }).then((ms)=>this.mediaStream = ms).catch(console.error);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SpeechRecognition);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9mZWF0dXJlcy9zcGVlY2hfcmVjb2duaXRpb24udHN4IiwibWFwcGluZ3MiOiI7Ozs7QUFFQSxNQUFNQTtJQVdGQyxZQUNJQyxRQUE2QixFQUM3QkMsY0FBaUQsQ0FDbkQ7YUFWTUMsWUFBcUI7YUFJckJDLGNBQXVCO2FBZ0N2QkMsZ0JBQWdCO1lBQ3BCQyxhQUFhLElBQUksQ0FBQ0MsV0FBVztZQUU3QixJQUFJLENBQUNBLFdBQVcsR0FBR0MsV0FBVztnQkFDMUIsZ0NBQWdDO2dCQUVoQyxJQUFJLElBQUksQ0FBQ1AsUUFBUSxDQUFDUSxLQUFLLElBQUksSUFBSTtvQkFDM0JDLFFBQVFDLEdBQUcsQ0FBQyxJQUFJLENBQUNWLFFBQVEsQ0FBQ1EsS0FBSztvQkFDL0IsSUFBSSxDQUFDUixRQUFRLENBQUNRLEtBQUssR0FBRztvQkFFdEIsSUFBSSxDQUFDRyxpQkFBaUIsQ0FBQ0MsSUFBSTtnQkFDL0I7Z0JBRUEsSUFBSSxDQUFDUixhQUFhO1lBQ3RCLEdBQUc7UUFDUDthQUVRUyxXQUFXLENBQUNDO1lBQ2hCLE1BQU1DLFVBQXVDRCxFQUFFQyxPQUFPO1lBQ3RELElBQUlDLGFBQXFCO1lBRXpCQyxNQUFNQyxJQUFJLENBQUNILFNBQVNJLE9BQU8sQ0FBQyxDQUFDQztnQkFDekIsTUFBTUMsY0FBNENELE1BQU0sQ0FBQyxFQUFFO2dCQUMzREosY0FBY0ssWUFBWUwsVUFBVTtZQUN4QztZQUVBLHlCQUF5QjtZQUN6QixJQUFJLENBQUNoQixRQUFRLENBQUNRLEtBQUssR0FBR1E7WUFDdEIsSUFBSSxDQUFDWixhQUFhO1FBQ3RCO2FBRVFrQixRQUFRO1lBQ1osMEJBQTBCO1lBQzFCLElBQUksSUFBSSxDQUFDcEIsU0FBUyxFQUFFLElBQUksQ0FBQ1MsaUJBQWlCLENBQUNZLEtBQUs7UUFDcEQ7YUFFQUEsUUFBUTtZQUNKLElBQUksQ0FBQyxJQUFJLENBQUNyQixTQUFTLEVBQUUsSUFBSSxDQUFDUyxpQkFBaUIsQ0FBQ1ks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LElBQUksQ0FBQyxDQUFDQyxLQUFvQixJQUFJLENBQUNwQixXQUFXLEdBQUdvQixJQUM3Q0MsS0FBSyxDQUFDbkQsUUFBUXlDLEtBQUs7SUFDeEI7QUFxR0o7QUFFQSxpRUFBZXBELGlCQUFpQkEsRUFBQSIsInNvdXJjZXMiOlsiRDpcXFByb2plY3RzXFxuYW1jaGEtYWktYXNzaXN0YW50XFxjbGllbnRcXHNyY1xcZmVhdHVyZXNcXHNwZWVjaF9yZWNvZ25pdGlvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlzcGF0Y2gsIFNldFN0YXRlQWN0aW9uIH0gZnJvbSBcInJlYWN0XCJcclxuXHJcbmNsYXNzIFNwZWVjaFJlY29nbml0aW9uIHtcclxuICAgIHByaXZhdGUgc3BlZWNoUmVjb2duaXRpb246IGFueVxyXG4gICAgcHJpdmF0ZSBtZWRpYVN0cmVhbTogTWVkaWFTdHJlYW0gfCBudWxsXHJcbiAgICBwcml2YXRlIHRleHRhcmVhOiBIVE1MVGV4dEFyZWFFbGVtZW50XHJcbiAgICBwcml2YXRlIGlzU3RhcnRlZDogYm9vbGVhbiA9IGZhbHNlXHJcbiAgICBwcml2YXRlIHNlbmRUaW1lT3V0OiBOb2RlSlMuVGltZW91dFxyXG5cclxuICAgIHByaXZhdGUgc29ja2V0OiBXZWJTb2NrZXRcclxuICAgIHByaXZhdGUgaXNDb25uZWN0ZWQ6IGJvb2xlYW4gPSBmYWxzZVxyXG4gICAgcHJpdmF0ZSBzZXRJc0Nvbm5lY3RlZDogRGlzcGF0Y2g8U2V0U3RhdGVBY3Rpb248Ym9vbGVhbj4+XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgdGV4dGFyZWE6IEhUTUxUZXh0QXJlYUVsZW1lbnQsXHJcbiAgICAgICAgc2V0SXNDb25uZWN0ZWQ6IERpc3BhdGNoPFNldFN0YXRlQWN0aW9uPGJvb2xlYW4+PlxyXG4gICAgKSB7XHJcbiAgICAgICAgdGhpcy50ZXh0YXJlYSA9IHRleHRhcmVhXHJcbiAgICAgICAgdGhpcy5zZXRJc0Nvbm5lY3RlZCA9IHNldElzQ29ubmVjdGVkXHJcblxyXG4gICAgICAgIHRoaXMuc3BlZWNoUmVjb2duaXRpb24gPSBuZXcgKCh3aW5kb3cgYXMgYW55KVsnU3BlZWNoUmVjb2duaXRpb24nXSB8fCAod2luZG93IGFzIGFueSlbJ3dlYmtpdFNwZWVjaFJlY29nbml0aW9uJ10pKClcclxuXHJcbiAgICAgICAgdGhpcy5tZWRpYVN0cmVhbSA9IG51bGxcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuc3BlZWNoUmVjb2duaXRpb24pIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJTcGVlY2hSZWNvZ25pdGlvbiBzdGFydGVkLlwiKVxyXG5cclxuICAgICAgICAgICAgdGhpcy5zcGVlY2hSZWNvZ25pdGlvbi5sYW5nID0gXCJ0aC1USFwiXHJcbiAgICAgICAgICAgIHRoaXMuc3BlZWNoUmVjb2duaXRpb24uY29udGludW91cyA9IHRydWVcclxuICAgICAgICAgICAgdGhpcy5zcGVlY2hSZWNvZ25pdGlvbi5pbnRlcmltUmVzdWx0cyA9IHRydWVcclxuXHJcbiAgICAgICAgICAgIHRoaXMuc3BlZWNoUmVjb2duaXRpb24ub25yZXN1bHQgPSB0aGlzLm9uUmVzdWx0XHJcbiAgICAgICAgICAgIHRoaXMuc3BlZWNoUmVjb2duaXRpb24ub25lbmQgPSB0aGlzLm9uRW5kXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJUaGlzIEJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBTcGVlY2hSZWNvZ25pdGlvbi5cIilcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsgYXVkaW86IHRydWUsIHZpZGVvOiBmYWxzZSB9KVxyXG4gICAgICAgIC50aGVuKChtczogTWVkaWFTdHJlYW0pID0+IHRoaXMubWVkaWFTdHJlYW0gPSBtcylcclxuICAgICAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGJlZm9yU2VuZFRpbWUgPSAoKSA9PiB7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuc2VuZFRpbWVPdXQpXHJcblxyXG4gICAgICAgIHRoaXMuc2VuZFRpbWVPdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIlNlbmQgdG8gc2VydmVyLlwiKVxyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMudGV4dGFyZWEudmFsdWUgIT0gXCJcIikge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy50ZXh0YXJlYS52YWx1ZSlcclxuICAgICAgICAgICAgICAgIHRoaXMudGV4dGFyZWEudmFsdWUgPSBcIlwiXHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5zcGVlY2hSZWNvZ25pdGlvbi5zdG9wKClcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhpcy5iZWZvclNlbmRUaW1lKClcclxuICAgICAgICB9LCAzMDAwKVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25SZXN1bHQgPSAoZSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHJlc3VsdHM6IFNwZWVjaFJlY29nbml0aW9uUmVzdWx0TGlzdCA9IGUucmVzdWx0c1xyXG4gICAgICAgIGxldCB0cmFuc2NyaXB0OiBzdHJpbmcgPSBcIlwiXHJcblxyXG4gICAgICAgIEFycmF5LmZyb20ocmVzdWx0cykuZm9yRWFjaCgocmVzdWx0OiBTcGVlY2hSZWNvZ25pdGlvblJlc3VsdCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBhbHRlcm5hdGl2ZTogU3BlZWNoUmVjb2duaXRpb25BbHRlcm5hdGl2ZSA9IHJlc3VsdFswXVxyXG4gICAgICAgICAgICB0cmFuc2NyaXB0ICs9IGFsdGVybmF0aXZlLnRyYW5zY3JpcHRcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRyYW5zY3JpcHQpXHJcbiAgICAgICAgdGhpcy50ZXh0YXJlYS52YWx1ZSA9IHRyYW5zY3JpcHRcclxuICAgICAgICB0aGlzLmJlZm9yU2VuZFRpbWUoKVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25FbmQgPSAoKSA9PiB7XHJcbiAgICAgICAgLy90aGlzLnRleHRhcmVhLnZhbHVlID0gXCJcIlxyXG4gICAgICAgIGlmICh0aGlzLmlzU3RhcnRlZCkgdGhpcy5zcGVlY2hSZWNvZ25pdGlvbi5zdGFydCgpXHJcbiAgICB9XHJcblxyXG4gICAgc3RhcnQgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmlzU3RhcnRlZCkgdGhpcy5zcGVlY2hSZWNvZ25pdGlvbi5zdGFydCgpXHJcbiAgICAgICAgdGhpcy5pc1N0YXJ0ZWQgPSB0cnVlXHJcbiAgICAgICAgdGhpcy5iZWZvclNlbmRUaW1lKClcclxuICAgICAgICB0aGlzLnRleHRhcmVhLnZhbHVlID0gXCJcIlxyXG4gICAgfVxyXG5cclxuICAgIHN0b3AgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNTdGFydGVkKSB0aGlzLnNwZWVjaFJlY29nbml0aW9uLnN0b3AoKVxyXG4gICAgICAgIHRoaXMuaXNTdGFydGVkID0gZmFsc2VcclxuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5zZW5kVGltZU91dClcclxuICAgICAgICB0aGlzLnRleHRhcmVhLnZhbHVlID0gXCJcIlxyXG4gICAgfVxyXG5cclxuICAgIGdldEF1ZGlvRGV2aWNlID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGRldmljZXM6IEFycmF5PE1lZGlhRGV2aWNlSW5mbz4gPSBhd2FpdCBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmVudW1lcmF0ZURldmljZXMoKVxyXG4gICAgICAgIHJldHVybiBkZXZpY2VzLmZpbHRlcigobWRpOiBNZWRpYURldmljZUluZm8pID0+IG1kaS5raW5kID09IFwiYXVkaW9pbnB1dFwiKVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc3dpdGNoQXVkaW9JbnB1dERldmljZSA9IGFzeW5jIChkZXZpY2VJZDogc3RyaW5nKSA9PiB7XHJcbiAgICAgICAgY29uc3QgbmV3TWVkaWFTdHJlYW06IE1lZGlhU3RyZWFtID0gYXdhaXQgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoe1xyXG4gICAgICAgICAgICBhdWRpbzogeyBkZXZpY2VJZDogeyBleGFjdDogZGV2aWNlSWQgfSB9LFxyXG4gICAgICAgICAgICB2aWRlbzogZmFsc2VcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICB0aGlzLm1lZGlhU3RyZWFtID0gbmV3TWVkaWFTdHJlYW1cclxuICAgIH1cclxuXHJcbiAgICBtZWRpYUNoYW5nZSA9IChkZXZpY2VJZDogc3RyaW5nKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZGV2aWNlSWQpXHJcbiAgICAgICAgdGhpcy5zd2l0Y2hBdWRpb0lucHV0RGV2aWNlKGRldmljZUlkKVxyXG4gICAgfVxyXG5cclxuICAgIGNvbm5lY3RXZWJTb2NrZXQgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHRoaXMuc29ja2V0ID09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aGlzLnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoXCJ3czovL2xvY2FsaG9zdDo2MzM2XCIpXHJcblxyXG4gICAgICAgICAgICB0aGlzLnNvY2tldC5vbm9wZW4gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIldlYlNvY2tldCBjb25uZWN0ZWQuXCIpXHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5pc0Nvbm5lY3RlZCA9IHRydWVcclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0SXNDb25uZWN0ZWQodHJ1ZSlcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhpcy5zb2NrZXQub25tZXNzYWdlID0gKGU6IE1lc3NhZ2VFdmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZS5kYXRhKVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLnNvY2tldC5vbmNsb3NlID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJXZWJTb2NrZXQgY2xvc2VkLlwiKVxyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRJc0Nvbm5lY3RlZChmYWxzZSlcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhpcy5zb2NrZXQub25lcnJvciA9IChlOiBFdmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5zb2NrZXQuY2xvc2UoKVxyXG4gICAgICAgICAgICB0aGlzLnNvY2tldCA9IHVuZGVmaW5lZFxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU3BlZWNoUmVjb2duaXRpb24iXSwibmFtZXMiOlsiU3BlZWNoUmVjb2duaXRpb24iLCJjb25zdHJ1Y3RvciIsInRleHRhcmVhIiwic2V0SXNDb25uZWN0ZWQiLCJpc1N0YXJ0ZWQiLCJpc0Nvbm5lY3RlZCIsImJlZm9yU2VuZFRpbWUiLCJjbGVhclRpbWVvdXQiLCJzZW5kVGltZU91dCIsInNldFRpbWVvdXQiLCJ2YWx1ZSIsImNvbnNvbGUiLCJsb2ciLCJzcGVlY2hSZWNvZ25pdGlvbiIsInN0b3AiLCJvblJlc3VsdCIsImUiLCJyZXN1bHRzIiwidHJhbnNjcmlwdCIsIkFycmF5IiwiZnJvbSIsImZvckVhY2giLCJyZXN1bHQiLCJhbHRlcm5hdGl2ZSIsIm9uRW5kIiwic3RhcnQiLCJnZXRBdWRpb0RldmljZSIsImRldmljZXMiLCJuYXZpZ2F0b3IiLCJtZWRpYURldmljZXMiLCJlbnVtZXJhdGVEZXZpY2VzIiwiZmlsdGVyIiwibWRpIiwia2luZCIsInN3aXRjaEF1ZGlvSW5wdXREZXZpY2UiLCJkZXZpY2VJZCIsIm5ld01lZGlhU3RyZWFtIiwiZ2V0VXNlck1lZGlhIiwiYXVkaW8iLCJleGFjdCIsInZpZGVvIiwibWVkaWFTdHJlYW0iLCJtZWRpYUNoYW5nZSIsImNvbm5lY3RXZWJTb2NrZXQiLCJzb2NrZXQiLCJ1bmRlZmluZWQiLCJXZWJTb2NrZXQiLCJvbm9wZW4iLCJvbm1lc3NhZ2UiLCJkYXRhIiwib25jbG9zZSIsIm9uZXJyb3IiLCJlcnJvciIsImNsb3NlIiwid2luZG93IiwibGFuZyIsImNvbnRpbnVvdXMiLCJpbnRlcmltUmVzdWx0cyIsIm9ucmVzdWx0Iiwib25lbmQiLCJ0aGVuIiwibXMiLCJjYXRjaCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/features/speech_recognition.tsx\n"));

/***/ })

});